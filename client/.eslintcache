[{"C:\\Users\\Ariel'sPC\\Documents\\Projects\\Interviews\\Artbrain\\chat-app\\client\\src\\index.jsx":"1","C:\\Users\\Ariel'sPC\\Documents\\Projects\\Interviews\\Artbrain\\chat-app\\client\\src\\App.jsx":"2","C:\\Users\\Ariel'sPC\\Documents\\Projects\\Interviews\\Artbrain\\chat-app\\client\\src\\theme.jsx":"3","C:\\Users\\Ariel'sPC\\Documents\\Projects\\Interviews\\Artbrain\\chat-app\\client\\src\\Router.jsx":"4","C:\\Users\\Ariel'sPC\\Documents\\Projects\\Interviews\\Artbrain\\chat-app\\client\\src\\components\\OpenChatsContainerButton.jsx":"5","C:\\Users\\Ariel'sPC\\Documents\\Projects\\Interviews\\Artbrain\\chat-app\\client\\src\\components\\ChatsContainer.jsx":"6","C:\\Users\\Ariel'sPC\\Documents\\Projects\\Interviews\\Artbrain\\chat-app\\client\\src\\helpers\\db.js":"7","C:\\Users\\Ariel'sPC\\Documents\\Projects\\Interviews\\Artbrain\\chat-app\\client\\src\\components\\MessagesGrid.jsx":"8","C:\\Users\\Ariel'sPC\\Documents\\Projects\\Interviews\\Artbrain\\chat-app\\client\\src\\components\\MessageBottomAppBar.jsx":"9","C:\\Users\\Ariel'sPC\\Documents\\Projects\\Interviews\\Artbrain\\chat-app\\client\\src\\components\\ChatsList.jsx":"10","C:\\Users\\Ariel'sPC\\Documents\\Projects\\Interviews\\Artbrain\\chat-app\\client\\src\\components\\ChatsAppBar.jsx":"11","C:\\Users\\Ariel'sPC\\Documents\\Projects\\Interviews\\Artbrain\\chat-app\\client\\src\\Provider.jsx":"12","C:\\Users\\Ariel'sPC\\Documents\\Projects\\Interviews\\Artbrain\\chat-app\\client\\src\\components\\ChatsComponent.jsx":"13","C:\\Users\\Ariel'sPC\\Documents\\Projects\\Interviews\\Artbrain\\chat-app\\client\\src\\pages\\HomePage.jsx":"14"},{"size":199,"mtime":1629131442259,"results":"15","hashOfConfig":"16"},{"size":295,"mtime":1629457482707,"results":"17","hashOfConfig":"16"},{"size":928,"mtime":1629133010761,"results":"18","hashOfConfig":"16"},{"size":455,"mtime":1629460227501,"results":"19","hashOfConfig":"16"},{"size":627,"mtime":1629221372480,"results":"20","hashOfConfig":"16"},{"size":717,"mtime":1629448227554,"results":"21","hashOfConfig":"16"},{"size":281,"mtime":1629457241869,"results":"22","hashOfConfig":"16"},{"size":1288,"mtime":1629453907033,"results":"23","hashOfConfig":"16"},{"size":1200,"mtime":1629459644668,"results":"24","hashOfConfig":"16"},{"size":972,"mtime":1629459442563,"results":"25","hashOfConfig":"16"},{"size":1529,"mtime":1629453739075,"results":"26","hashOfConfig":"16"},{"size":433,"mtime":1629458093903,"results":"27","hashOfConfig":"16"},{"size":3062,"mtime":1629459821555,"results":"28","hashOfConfig":"16"},{"size":797,"mtime":1629460223671,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1wxjzz7",{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Ariel'sPC\\Documents\\Projects\\Interviews\\Artbrain\\chat-app\\client\\src\\index.jsx",[],["61","62"],"C:\\Users\\Ariel'sPC\\Documents\\Projects\\Interviews\\Artbrain\\chat-app\\client\\src\\App.jsx",[],"C:\\Users\\Ariel'sPC\\Documents\\Projects\\Interviews\\Artbrain\\chat-app\\client\\src\\theme.jsx",[],"C:\\Users\\Ariel'sPC\\Documents\\Projects\\Interviews\\Artbrain\\chat-app\\client\\src\\Router.jsx",[],"C:\\Users\\Ariel'sPC\\Documents\\Projects\\Interviews\\Artbrain\\chat-app\\client\\src\\components\\OpenChatsContainerButton.jsx",[],"C:\\Users\\Ariel'sPC\\Documents\\Projects\\Interviews\\Artbrain\\chat-app\\client\\src\\components\\ChatsContainer.jsx",[],"C:\\Users\\Ariel'sPC\\Documents\\Projects\\Interviews\\Artbrain\\chat-app\\client\\src\\helpers\\db.js",[],"C:\\Users\\Ariel'sPC\\Documents\\Projects\\Interviews\\Artbrain\\chat-app\\client\\src\\components\\MessagesGrid.jsx",[],"C:\\Users\\Ariel'sPC\\Documents\\Projects\\Interviews\\Artbrain\\chat-app\\client\\src\\components\\MessageBottomAppBar.jsx",["63"],"import React,{useState} from 'react';\r\nimport { makeStyles, AppBar, TextField } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    msgAppBar: {\r\n        top: 'auto',\r\n        bottom: 0,\r\n    },\r\n}));\r\n\r\n\r\nexport default function MessageBottomAppBar({handleOnSubmit, handleOnChange}) {\r\n    const classes = useStyles();\r\n    \r\n    return (\r\n        <AppBar position=\"fixed\" color=\"secondary\" className={classes.msgAppBar}>\r\n            <TextField\r\n                variant=\"filled\"\r\n                style={{ margin: 8 }}\r\n                placeholder=\"Enter a new message here ...\"\r\n                margin=\"normal\"\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n                onChange={(e) => handleOnChange(e.target.value)}\r\n                onKeyDown={(e) => {\r\n                    if (e.key === \"Enter\") {\r\n                        if (e.target.value.length > 0) {\r\n                            handleOnSubmit();\r\n                            handleOnChange(\"\");\r\n                            e.target.value = \"\";   \r\n                        }\r\n                    }\r\n                }}\r\n            />\r\n        </AppBar>\r\n    );\r\n}","C:\\Users\\Ariel'sPC\\Documents\\Projects\\Interviews\\Artbrain\\chat-app\\client\\src\\components\\ChatsList.jsx",[],"C:\\Users\\Ariel'sPC\\Documents\\Projects\\Interviews\\Artbrain\\chat-app\\client\\src\\components\\ChatsAppBar.jsx",[],"C:\\Users\\Ariel'sPC\\Documents\\Projects\\Interviews\\Artbrain\\chat-app\\client\\src\\Provider.jsx",[],"C:\\Users\\Ariel'sPC\\Documents\\Projects\\Interviews\\Artbrain\\chat-app\\client\\src\\components\\ChatsComponent.jsx",["64"],"import React, {useState, useEffect} from 'react';\r\n\r\nimport { useTrackedState } from '../Provider';\r\n\r\n\r\nimport MessagesGrid from './MessagesGrid';\r\nimport MessageBottomAppBar from './MessageBottomAppBar';\r\nimport ChatsList from './ChatsList';\r\nimport ChatsAppBar from './ChatsAppBar';\r\n\r\n\r\nimport { socket } from '../helpers/db';\r\n\r\n\r\n\r\nexport default function ChatsComponent({ isCustomer }) {\r\n    const [chats, setChats] = useState([]);\r\n    const [chatId, setChatId] = useState(null);\r\n    const [newMessage, setNewMessage] = useState('');\r\n    const [messages, setMessages] = useState([]);\r\n    const { userName } = useTrackedState();\r\n    const [title, setTitle] = useState(\"Conversations\");\r\n\r\n\r\n    const populateChats = data => {\r\n        setChats(data);\r\n    };\r\n\r\n    const sendNewMessage = (message, id) => {\r\n        socket.emit(\"sendMessage\", message, id, isCustomer);\r\n    }\r\n\r\n    const populateCustomerChat = data => {\r\n        setMessages(data);\r\n     }\r\n    const updateChatMessages = id => {\r\n        socket.emit(\"getChatMessages\", id);\r\n    }\r\n\r\n    const createChat = id => {\r\n        setChatId(id);\r\n        socket.emit(\"getCustomerChats\",userName);\r\n    }\r\n\r\n    useEffect(() => {\r\n        socket.on(\"getChats\", populateChats);\r\n        socket.on(\"updateChatMessages\", updateChatMessages);\r\n        socket.on(\"getMessages\", populateCustomerChat);\r\n        socket.on(\"chatCreated\", createChat);\r\n        if (isCustomer) {\r\n            socket.emit(\"getCustomerChats\", userName);\r\n        }\r\n        else {\r\n            socket.emit(\"getSupportChats\");\r\n         }\r\n        return () => {\r\n            socket.off(\"getChats\");\r\n            socket.off(\"updateChatMessages\");\r\n            socket.off(\"getMessages\");\r\n            socket.off(\"chatCreated\");\r\n        }\r\n    }, [chatId]);\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <ChatsAppBar chatId={chatId} title={title} handleOnReturn={() => {\r\n                if (isCustomer) {\r\n                    socket.emit(\"getCustomerChats\", userName);\r\n                }\r\n                else {\r\n                    socket.emit(\"getSupportChats\");\r\n                }\r\n                setTitle(\"Conversations\");\r\n                setChatId(null);\r\n            }} handleOnCreate ={isCustomer? ()=> socket.emit(\"createChat\", userName): null} />\r\n            {chatId ?\r\n                <div>\r\n                    <MessageBottomAppBar handleOnChange={(text)=>setNewMessage(text)} handleOnSubmit={()=> sendNewMessage(newMessage,chatId)} />\r\n                    <MessagesGrid messages={messages} isCustomer={isCustomer} />\r\n                </div> : <ChatsList chats={chats} isCustomer={isCustomer} handleItemClicked={(id,customerUserName) => {\r\n                    updateChatMessages(id);\r\n                    setChatId(id);\r\n                    if (isCustomer) {\r\n                        setTitle(\"Support\");\r\n                    }\r\n                    else {\r\n                        setTitle(customerUserName);\r\n                    }\r\n                }} />\r\n                }\r\n        </div>\r\n    );\r\n}","C:\\Users\\Ariel'sPC\\Documents\\Projects\\Interviews\\Artbrain\\chat-app\\client\\src\\pages\\HomePage.jsx",[],{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":1,"column":15,"nodeType":"71","messageId":"72","endLine":1,"endColumn":23},{"ruleId":"73","severity":1,"message":"74","line":62,"column":8,"nodeType":"75","endLine":62,"endColumn":16,"suggestions":"76"},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'createChat', 'isCustomer', and 'userName'. Either include them or remove the dependency array.","ArrayExpression",["79"],"no-global-assign","no-unsafe-negation",{"desc":"80","fix":"81"},"Update the dependencies array to be: [chatId, createChat, isCustomer, userName]",{"range":"82","text":"83"},[1792,1800],"[chatId, createChat, isCustomer, userName]"]